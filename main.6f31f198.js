parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"aDk8":[function(require,module,exports) {
"use strict";function e(){try{return navigator.userAgent}catch(e){return"<environment undetectable>"}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUserAgent=e;
},{}],"fERQ":[function(require,module,exports) {
function r(e,n,o,t){if("function"!=typeof o)throw new Error("method for before hook must be a function");return t||(t={}),Array.isArray(n)?n.reverse().reduce(function(n,o){return r.bind(null,e,o,n,t)},o)():Promise.resolve().then(function(){return e.registry[n]?e.registry[n].reduce(function(r,e){return e.hook.bind(null,r,t)},o)():o(t)})}module.exports=r;
},{}],"nBNi":[function(require,module,exports) {
function n(n,r,e,t){var o=t;n.registry[e]||(n.registry[e]=[]),"before"===r&&(t=function(n,r){return Promise.resolve().then(o.bind(null,r)).then(n.bind(null,r))}),"after"===r&&(t=function(n,r){var e;return Promise.resolve().then(n.bind(null,r)).then(function(n){return o(e=n,r)}).then(function(){return e})}),"error"===r&&(t=function(n,r){return Promise.resolve().then(n.bind(null,r)).catch(function(n){return o(n,r)})}),n.registry[e].push({hook:t,orig:o})}module.exports=n;
},{}],"ZSlN":[function(require,module,exports) {
function r(r,i,e){if(r.registry[i]){var t=r.registry[i].map(function(r){return r.orig}).indexOf(e);-1!==t&&r.registry[i].splice(t,1)}}module.exports=r;
},{}],"fNVN":[function(require,module,exports) {
var r=require("./lib/register"),e=require("./lib/add"),o=require("./lib/remove"),n=Function.bind,i=n.bind(n);function l(r,n,l){var u=i(o,null).apply(null,l?[n,l]:[n]);r.api={remove:u},r.remove=u,["before","error","after","wrap"].forEach(function(o){var u=l?[n,o,l]:[n,o];r[o]=r.api[o]=i(e,null).apply(null,u)})}function u(){var e={registry:{}},o=r.bind(null,e,"h");return l(o,e,"h"),o}function t(){var e={registry:{}},o=r.bind(null,e);return l(o,e),o}var a=!1;function p(){return a||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),a=!0),t()}p.Singular=u.bind(),p.Collection=t.bind(),module.exports=p,module.exports.Hook=p,module.exports.Singular=p.Singular,module.exports.Collection=p.Collection;
},{"./lib/register":"fERQ","./lib/add":"nBNi","./lib/remove":"ZSlN"}],"qBu3":[function(require,module,exports) {
"use strict";function e(e){return null!=e&&"object"==typeof e&&!1===Array.isArray(e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=e;
},{}],"dKE3":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=o;var t=e(require("isobject"));function e(t){return t&&t.__esModule?t:{default:t}}function r(e){return!0===(0,t.default)(e)&&"[object Object]"===Object.prototype.toString.call(e)}function o(t){var e,o;return!1!==r(t)&&("function"==typeof(e=t.constructor)&&(!1!==r(o=e.prototype)&&!1!==o.hasOwnProperty("isPrototypeOf")))}
},{"isobject":"qBu3"}],"LxTi":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.endpoint=void 0;var e=n(require("is-plain-object")),t=require("universal-user-agent");function n(e){return e&&e.__esModule?e:{default:e}}function r(e){return e?Object.keys(e).reduce((t,n)=>(t[n.toLowerCase()]=e[n],t),{}):{}}function i(t,n){const r=Object.assign({},t);return Object.keys(n).forEach(o=>{(0,e.default)(n[o])&&o in t?r[o]=i(t[o],n[o]):Object.assign(r,{[o]:n[o]})}),r}function o(e,t,n){if("string"==typeof t){let[e,r]=t.split(" ");n=Object.assign(r?{method:e,url:r}:{url:e},n)}else n=Object.assign({},t);n.headers=r(n.headers);const o=i(e||{},n);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter(e=>!o.mediaType.previews.includes(e)).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map(e=>e.replace(/-preview/,"")),o}function s(e,t){const n=/\?/.test(e)?"&":"?",r=Object.keys(t);return 0===r.length?e:e+n+r.map(e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`).join("&")}const c=/\{[^}]+\}/g;function a(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function u(e){const t=e.match(c);return t?t.map(a).reduce((e,t)=>e.concat(t),[]):[]}function p(e,t){return Object.keys(e).filter(e=>!t.includes(e)).reduce((t,n)=>(t[n]=e[n],t),{})}function l(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function d(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function f(e,t,n){return t="+"===e||"#"===e?l(t):d(t),n?d(n)+"="+t:t}function h(e){return null!=e}function m(e){return";"===e||"&"===e||"?"===e}function g(e,t,n,r){var i=e[n],o=[];if(h(i)&&""!==i)if("string"==typeof i||"number"==typeof i||"boolean"==typeof i)i=i.toString(),r&&"*"!==r&&(i=i.substring(0,parseInt(r,10))),o.push(f(t,i,m(t)?n:""));else if("*"===r)Array.isArray(i)?i.filter(h).forEach(function(e){o.push(f(t,e,m(t)?n:""))}):Object.keys(i).forEach(function(e){h(i[e])&&o.push(f(t,i[e],e))});else{const e=[];Array.isArray(i)?i.filter(h).forEach(function(n){e.push(f(t,n))}):Object.keys(i).forEach(function(n){h(i[n])&&(e.push(d(n)),e.push(f(t,i[n].toString())))}),m(t)?o.push(d(n)+"="+e.join(",")):0!==e.length&&o.push(e.join(","))}else";"===t?h(i)&&o.push(d(n)):""!==i||"&"!==t&&"?"!==t?""===i&&o.push(""):o.push(d(n)+"=");return o}function y(e){return{expand:b.bind(null,e)}}function b(e,t){var n=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,r,i){if(r){let e="";const i=[];if(-1!==n.indexOf(r.charAt(0))&&(e=r.charAt(0),r=r.substr(1)),r.split(/,/g).forEach(function(n){var r=/([^:\*]*)(?::(\d+)|(\*))?/.exec(n);i.push(g(t,e,r[1],r[2]||r[3]))}),e&&"+"!==e){var o=",";return"?"===e?o="&":"#"!==e&&(o=e),(0!==i.length?e:"")+i.join(o)}return i.join(",")}return l(i)})}function j(e){let t,n=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{+$1}"),i=Object.assign({},e.headers),o=p(e,["method","baseUrl","url","headers","request","mediaType"]);const c=u(r);r=y(r).expand(o),/^http/.test(r)||(r=e.baseUrl+r);const a=p(o,Object.keys(e).filter(e=>c.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(i.accept)&&(e.mediaType.format&&(i.accept=i.accept.split(/,/).map(t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),e.mediaType.previews.length)){const t=i.accept.match(/[\w-]+(?=-preview)/g)||[];i.accept=t.concat(e.mediaType.previews).map(t=>{return`application/vnd.github.${t}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`}).join(",")}return["GET","HEAD"].includes(n)?r=s(r,a):"data"in a?t=a.data:Object.keys(a).length?t=a:i["content-length"]=0,i["content-type"]||void 0===t||(i["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(n)&&void 0===t&&(t=""),Object.assign({method:n,url:r,headers:i},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function v(e,t,n){return j(o(e,t,n))}function T(e,t){const n=o(e,t),r=v.bind(null,n);return Object.assign(r,{DEFAULTS:n,defaults:T.bind(null,n),merge:o.bind(null,n),parse:j})}const w="5.5.3",O=`octokit-endpoint.js/5.5.3 ${(0,t.getUserAgent)()}`,A={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":O},mediaType:{format:"",previews:[]}},U=T(null,A);exports.endpoint=U;
},{"is-plain-object":"dKE3","universal-user-agent":"aDk8"}],"KBaF":[function(require,module,exports) {

"use strict";var e=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t)return t;throw new Error("unable to locate global object")},t=e();module.exports=exports=t.fetch,exports.default=t.fetch.bind(t),exports.Headers=t.Headers,exports.Request=t.Request,exports.Response=t.Response;
},{}],"Hdgo":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Deprecation=void 0;class r extends Error{constructor(r){super(r),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}exports.Deprecation=r;
},{}],"l1Gb":[function(require,module,exports) {
function n(e,r){if(e&&r)return n(e)(r);if("function"!=typeof e)throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(n){t[n]=e[n]}),t;function t(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];var t=e.apply(this,n),o=n[n.length-1];return"function"==typeof t&&t!==o&&Object.keys(o).forEach(function(n){t[n]=o[n]}),t}}module.exports=n;
},{}],"t8WW":[function(require,module,exports) {
var e=require("wrappy");function r(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function n(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},n=e.name||"Function wrapped with `once`";return r.onceError=n+" shouldn't be called more than once",r.called=!1,r}module.exports=e(r),module.exports.strict=e(n),r.proto=r(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return r(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})});
},{"wrappy":"l1Gb"}],"oyDP":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RequestError=void 0;var e=require("deprecation"),r=t(require("once"));function t(e){return e&&e.__esModule?e:{default:e}}const s=(0,r.default)(e=>console.warn(e));class o extends Error{constructor(r,t,o){super(r),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,Object.defineProperty(this,"code",{get:()=>(s(new e.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),this.headers=o.headers||{};const c=Object.assign({},o.request);o.request.headers.authorization&&(c.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),c.url=c.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=c}}exports.RequestError=o;
},{"deprecation":"Hdgo","once":"t8WW"}],"bgEH":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.request=void 0;var e=require("@octokit/endpoint"),t=require("universal-user-agent"),r=o(require("is-plain-object")),s=o(require("node-fetch")),n=require("@octokit/request-error");function o(e){return e&&e.__esModule?e:{default:e}}const u="5.3.2";function a(e){return e.arrayBuffer()}function i(e){((0,r.default)(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let t,o,u={};return(e.request&&e.request.fetch||s.default)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(r=>{o=r.url,t=r.status;for(const e of r.headers)u[e[0]]=e[1];if(204===t||205===t)return;if("HEAD"===e.method){if(t<400)return;throw new n.RequestError(r.statusText,t,{headers:u,request:e})}if(304===t)throw new n.RequestError("Not modified",t,{headers:u,request:e});if(t>=400)return r.text().then(r=>{const s=new n.RequestError(r,t,{headers:u,request:e});try{let e=JSON.parse(s.message);Object.assign(s,e);let t=e.errors;s.message=s.message+": "+t.map(JSON.stringify).join(", ")}catch(o){}throw s});const s=r.headers.get("content-type");return/application\/json/.test(s)?r.json():!s||/^text\/|charset=utf-8$/.test(s)?r.text():a(r)}).then(e=>({status:t,url:o,headers:u,data:e})).catch(t=>{if(t instanceof n.RequestError)throw t;throw new n.RequestError(t.message,500,{headers:u,request:e})})}function d(e,t){const r=e.defaults(t);return Object.assign(function(e,t){const s=r.merge(e,t);if(!s.request||!s.request.hook)return i(r.parse(s));const n=(e,t)=>i(r.parse(r.merge(e,t)));return Object.assign(n,{endpoint:r,defaults:d.bind(null,r)}),s.request.hook(n,s)},{endpoint:r,defaults:d.bind(null,r)})}const c=d(e.endpoint,{headers:{"user-agent":`octokit-request.js/5.3.2 ${(0,t.getUserAgent)()}`}});exports.request=c;
},{"@octokit/endpoint":"LxTi","universal-user-agent":"aDk8","is-plain-object":"dKE3","node-fetch":"KBaF","@octokit/request-error":"oyDP"}],"XVFd":[function(require,module,exports) {
"use strict";function e(){try{return navigator.userAgent}catch(e){return"<environment unknown>"}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUserAgent=e;
},{}],"mGee":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@octokit/request"),r=require("universal-user-agent");const t="4.3.1";class s extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const a=["method","baseUrl","url","headers","request","query"];function n(e,r,t){t=t="string"==typeof r?Object.assign({query:r},t):r;const n=Object.keys(t).reduce((e,r)=>a.includes(r)?(e[r]=t[r],e):(e.variables||(e.variables={}),e.variables[r]=t[r],e),{});return e(n).then(e=>{if(e.data.errors)throw new s(n,{data:e.data});return e.data.data})}function u(r,t){const s=r.defaults(t);return Object.assign((e,r)=>n(s,e,r),{defaults:u.bind(null,s),endpoint:e.request.endpoint})}const o=u(e.request,{headers:{"user-agent":`octokit-graphql.js/4.3.1 ${r.getUserAgent()}`},method:"POST",url:"/graphql"});function c(e){return u(e,{method:"POST",url:"/graphql"})}exports.graphql=o,exports.withCustomRequest=c;
},{"@octokit/request":"bgEH","universal-user-agent":"XVFd"}],"sySM":[function(require,module,exports) {
"use strict";async function t(t){const e=3===t.split(/\./).length?"app":/^v\d+\./.test(t)?"installation":"oauth";return{type:"token",token:t,tokenType:e}}function e(t){return 3===t.split(/\./).length?`bearer ${t}`:`token ${t}`}async function n(t,n,o,r){const i=n.endpoint.merge(o,r);return i.headers.authorization=e(t),n(i)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.createTokenAuth=void 0;const o=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(t.bind(null,e),{hook:n.bind(null,e)})};exports.createTokenAuth=o;
},{}],"htVG":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Octokit=void 0;var e=require("universal-user-agent"),t=require("before-after-hook"),s=require("@octokit/request"),r=require("@octokit/graphql"),o=require("@octokit/auth-token");const i="2.4.2";class n{constructor(n={}){const u=new t.Collection,a={baseUrl:s.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},n.request,{hook:u.bind(null,"request")}),mediaType:{previews:[],format:""}};if(a.headers["user-agent"]=[n.userAgent,`octokit-core.js/${i} ${(0,e.getUserAgent)()}`].filter(Boolean).join(" "),n.baseUrl&&(a.baseUrl=n.baseUrl),n.previews&&(a.mediaType.previews=n.previews),n.timeZone&&(a.headers["time-zone"]=n.timeZone),this.request=s.request.defaults(a),this.graphql=(0,r.withCustomRequest)(this.request).defaults(a),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},n.log),this.hook=u,n.authStrategy){const e=n.authStrategy(Object.assign({request:this.request},n.auth));u.wrap("request",e.hook),this.auth=e}else if(n.auth){const e=(0,o.createTokenAuth)(n.auth);u.wrap("request",e.hook),this.auth=e}else this.auth=(async()=>({type:"unauthenticated"}));this.constructor.plugins.forEach(e=>{Object.assign(this,e(this,n))})}static defaults(e){return class extends(this){constructor(...t){const s=t[0]||{};super(Object.assign({},e,s,s.userAgent&&e.userAgent?{userAgent:`${s.userAgent} ${e.userAgent}`}:null))}}}static plugin(e){var t;const s=this.plugins,r=Array.isArray(e)?e:[e];return(t=class extends(this){}).plugins=s.concat(r.filter(e=>!s.includes(e))),t}}exports.Octokit=n,n.VERSION=i,n.plugins=[];
},{"universal-user-agent":"aDk8","before-after-hook":"fNVN","@octokit/request":"bgEH","@octokit/graphql":"mGee","@octokit/auth-token":"sySM"}],"faQX":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.requestLog=t;const e="1.0.0";function t(e){e.hook.wrap("request",(t,o)=>{e.log.debug("request",o);const s=Date.now(),r=e.request.endpoint.parse(o),n=r.url.replace(o.baseUrl,"");return t(o).then(t=>(e.log.info(`${r.method} ${n} - ${t.status} in ${Date.now()-s}ms`),t)).catch(t=>{throw e.log.info(`${r.method} ${n} - ${t.status} in ${Date.now()-s}ms`),t})})}t.VERSION="1.0.0";
},{}],"KPxs":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.paginateRest=a;const t="2.0.1",e=[/^\/search\//,/^\/repos\/[^\/]+\/[^\/]+\/commits\/[^\/]+\/(check-runs|check-suites)([^\/]|$)/,/^\/installation\/repositories([^\/]|$)/,/^\/user\/installations([^\/]|$)/,/^\/repos\/[^\/]+\/[^\/]+\/actions\/secrets([^\/]|$)/,/^\/repos\/[^\/]+\/[^\/]+\/actions\/workflows(\/[^\/]+\/runs)?([^\/]|$)/,/^\/repos\/[^\/]+\/[^\/]+\/actions\/runs(\/[^\/]+\/(artifacts|jobs))?([^\/]|$)/];function n(t,n,o){const s=n.replace(t.request.endpoint.DEFAULTS.baseUrl,"");if(!e.find(t=>t.test(s)))return;const r=o.data.incomplete_results,a=o.data.repository_selection,i=o.data.total_count;delete o.data.incomplete_results,delete o.data.repository_selection,delete o.data.total_count;const c=Object.keys(o.data)[0],l=o.data[c];o.data=l,void 0!==r&&(o.data.incomplete_results=r),void 0!==a&&(o.data.repository_selection=a),o.data.total_count=i}function o(t,e,o){const s=t.request.endpoint(e,o),r=s.method,a=s.headers;let i=s.url;return{[Symbol.asyncIterator]:()=>({next:()=>i?t.request({method:r,url:i,headers:a}).then(e=>(n(t,i,e),i=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e})):Promise.resolve({done:!0})})}}function s(t,e,n,s){return"function"==typeof n&&(s=n,n=void 0),r(t,[],o(t,e,n)[Symbol.asyncIterator](),s)}function r(t,e,n,o){return n.next().then(s=>{if(s.done)return e;let a=!1;return e=e.concat(o?o(s.value,function(){a=!0}):s.value.data),a?e:r(t,e,n,o)})}function a(t){return{paginate:Object.assign(s.bind(null,t),{iterator:o.bind(null,t)})}}a.VERSION="2.0.1";
},{}],"X1Ja":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.restEndpointMethods=t;const e={actions:{cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateSecretForRepo:["PUT /repos/{owner}/{repo}/actions/secrets/{name}"],createRegistrationToken:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveToken:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteSecretFromRepo:["DELETE /repos/{owner}/{repo}/actions/secrets/{name}"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getSecret:["GET /repos/{owner}/{repo}/actions/secrets/{name}"],getSelfHostedRunner:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowJob:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listDownloadsForSelfHostedRunnerApplication:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listRepoWorkflowRuns:["GET /repos/{owner}/{repo}/actions/runs"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listSecretsForRepo:["GET /repos/{owner}/{repo}/actions/secrets"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelfHostedRunner:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"]},activity:{checkStarringRepo:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscription:["GET /notifications/threads/{thread_id}/subscription"],listEventsForOrg:["GET /users/{username}/events/orgs/{org}"],listEventsForUser:["GET /users/{username}/events"],listFeeds:["GET /feeds"],listNotifications:["GET /notifications"],listNotificationsForRepo:["GET /repos/{owner}/{repo}/notifications"],listPublicEvents:["GET /events"],listPublicEventsForOrg:["GET /orgs/{org}/events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markAsRead:["PUT /notifications"],markNotificationsAsReadForRepo:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepo:["PUT /user/starred/{owner}/{repo}"],unstarRepo:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],checkAccountIsAssociatedWithAny:["GET /marketplace_listing/accounts/{account_id}"],checkAccountIsAssociatedWithAnyStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],checkToken:["POST /applications/{client_id}/token",{mediaType:{previews:["doctor-strange"]}}],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions",{mediaType:{previews:["fury"]}}],createInstallationToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}}],deleteAuthorization:["DELETE /applications/{client_id}/grant",{mediaType:{previews:["doctor-strange"]}}],deleteInstallation:["DELETE /app/installations/{installation_id}",{mediaType:{previews:["gambit","machine-man"]}}],deleteToken:["DELETE /applications/{client_id}/token",{mediaType:{previews:["doctor-strange"]}}],getAuthenticated:["GET /app",{mediaType:{previews:["machine-man"]}}],getBySlug:["GET /apps/{app_slug}",{mediaType:{previews:["machine-man"]}}],getInstallation:["GET /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],getOrgInstallation:["GET /orgs/{org}/installation",{mediaType:{previews:["machine-man"]}}],getRepoInstallation:["GET /repos/{owner}/{repo}/installation",{mediaType:{previews:["machine-man"]}}],getUserInstallation:["GET /users/{username}/installation",{mediaType:{previews:["machine-man"]}}],listAccountsUserOrOrgOnPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsUserOrOrgOnPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories",{mediaType:{previews:["machine-man"]}}],listInstallations:["GET /app/installations",{mediaType:{previews:["machine-man"]}}],listInstallationsForAuthenticatedUser:["GET /user/installations",{mediaType:{previews:["machine-man"]}}],listMarketplacePurchasesForAuthenticatedUser:["GET /user/marketplace_purchases"],listMarketplacePurchasesForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listRepos:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}}],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],resetToken:["PATCH /applications/{client_id}/token",{mediaType:{previews:["doctor-strange"]}}],revokeInstallationToken:["DELETE /installation/token",{mediaType:{previews:["gambit"]}}]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codesOfConduct:{getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],listConductCodes:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listPublicForUser:["GET /users/{username}/gists"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getTemplate:["GET /gitignore/templates/{name}"],listTemplates:["GET /gitignore/templates"]},interactions:{addOrUpdateRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],addOrUpdateRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkAssignee:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestonesForRepo:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],replaceLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getForRepo:["GET /repos/{owner}/{repo}/license"],listCommonlyUsed:["GET /licenses"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportProgress:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addOrUpdateMembership:["PUT /orgs/{org}/memberships/{username}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembership:["GET /orgs/{org}/members/{username}"],checkPublicMembership:["GET /orgs/{org}/public_members/{username}"],concealMembership:["DELETE /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createHook:["POST /orgs/{org}/hooks"],createInvitation:["POST /orgs/{org}/invitations"],deleteHook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getHook:["GET /orgs/{org}/hooks/{hook_id}"],getMembership:["GET /orgs/{org}/memberships/{username}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],list:["GET /organizations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listHooks:["GET /orgs/{org}/hooks"],listInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}}],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMemberships:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],pingHook:["POST /orgs/{org}/hooks/{hook_id}/pings"],publicizeMembership:["PUT /orgs/{org}/public_members/{username}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembership:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateHook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateMembership:["PATCH /user/memberships/orgs/{org}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],reviewUserPermissionLevel:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewCommentReply:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReviewRequest:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],deleteComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewRequest:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],getCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listReviewRequests:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],delete:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addDeployKey:["POST /repos/{owner}/{repo}/keys"],addProtectedBranchAdminEnforcement:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],addProtectedBranchAppRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addProtectedBranchRequiredSignatures:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],addProtectedBranchRequiredStatusChecksContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addProtectedBranchTeamRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addProtectedBranchUserRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createHook:["POST /repos/{owner}/{repo}/hooks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFile:["PUT /repos/{owner}/{repo}/contents/{path}"],createRelease:["POST /repos/{owner}/{repo}/releases"],createStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDownload:["DELETE /repos/{owner}/{repo}/downloads/{download_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteHook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disablePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enablePagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getArchiveLink:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getContents:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getDownload:["GET /repos/{owner}/{repo}/downloads/{download_id}"],getHook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getProtectedBranchAdminEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getProtectedBranchPullRequestReviewEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getProtectedBranchRequiredSignatures:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getProtectedBranchRequiredStatusChecks:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getProtectedBranchRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],list:["GET /user/repos"],listAssetsForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitComments:["GET /repos/{owner}/{repo}/comments"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listDownloads:["GET /repos/{owner}/{repo}/downloads"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listHooks:["GET /repos/{owner}/{repo}/hooks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listProtectedBranchRequiredStatusChecksContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleases:["GET /repos/{owner}/{repo}/releases"],listStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],merge:["POST /repos/{owner}/{repo}/merges"],pingHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],removeProtectedBranchAdminEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],removeProtectedBranchAppRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeProtectedBranchPullRequestReviewEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],removeProtectedBranchRequiredSignatures:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],removeProtectedBranchRequiredStatusChecks:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeProtectedBranchRequiredStatusChecksContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeProtectedBranchRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],removeProtectedBranchTeamRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeProtectedBranchUserRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceProtectedBranchAppRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],replaceProtectedBranchRequiredStatusChecksContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],replaceProtectedBranchTeamRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],replaceProtectedBranchUserRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPageBuild:["POST /repos/{owner}/{repo}/pages/builds"],retrieveCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],testPushHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateHook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateProtectedBranchPullRequestReviewEnforcement:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateProtectedBranchRequiredStatusChecks:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},teams:{addOrUpdateMembershipInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkManagesRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],reviewProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmails:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowing:["GET /user/following/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],createGpgKey:["POST /user/gpg_keys"],createPublicKey:["POST /user/keys"],deleteEmails:["DELETE /user/emails"],deleteGpgKey:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicKey:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKey:["GET /user/gpg_keys/{gpg_key_id}"],getPublicKey:["GET /user/keys/{key_id}"],list:["GET /users"],listBlocked:["GET /user/blocks"],listEmails:["GET /user/emails"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForAuthenticatedUser:["GET /user/following"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeys:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmails:["GET /user/public_emails"],listPublicKeys:["GET /user/keys"],listPublicKeysForUser:["GET /users/{username}/keys"],togglePrimaryEmailVisibility:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},r="3.2.0";function s(e,r){const s={};for(const[t,i]of Object.entries(r))for(const[r,n]of Object.entries(i)){const[i,a,p]=n,[c,m]=i.split(/ /),l=Object.assign({method:c,url:m},a);s[t]||(s[t]={});const u=s[t];p?u[r]=o(e,t,r,l,p):u[r]=e.request.defaults(l)}return s}function o(e,r,s,o,t){const i=e.request.defaults(o);return Object.assign(function(...e){let r=i.endpoint.merge(...e);if(t.mapToData)return r=Object.assign({},r,{data:r[t.mapToData],[t.mapToData]:void 0}),i(r)},i)}function t(r){return s(r,e)}t.VERSION="3.2.0";
},{}],"YI8N":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Octokit=void 0;var t=require("@octokit/core"),e=require("@octokit/plugin-request-log"),o=require("@octokit/plugin-paginate-rest"),i=require("@octokit/plugin-rest-endpoint-methods");const r="17.0.0",s=t.Octokit.plugin(e.requestLog).plugin([o.paginateRest,i.restEndpointMethods]).defaults({userAgent:"octokit-rest.js/17.0.0"});exports.Octokit=s;
},{"@octokit/core":"htVG","@octokit/plugin-request-log":"faQX","@octokit/plugin-paginate-rest":"KPxs","@octokit/plugin-rest-endpoint-methods":"X1Ja"}],"FOZT":[function(require,module,exports) {
"use strict";function e(e,t){const n={};for(const r of e){const e=t(r);e in n||(n[e]=[]),n[e].push(r)}return n}function t(e){return"\n"!==e[e.length-1]&&(e+="\n"),e}function n(e){let t=new Date(e);const n=(t=new Date(e-60*t.getTimezoneOffset()*1e3)).toISOString();return n.slice(0,n.length-1)}function r(e){return n(e).slice(0,10)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.groupby=e,exports.ensureEndsNewline=t,exports.iso8601CurrTZ=n,exports.iso8601DayCurrTZ=r;
},{}],"OvQg":[function(require,module,exports) {
var global = arguments[3];
var define;
var global=arguments[3],define;!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o(e):"function"==typeof define&&define.amd?define(o):o(e)}("undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==global?global:this,function(global){"use strict";global=global||{};var _Base64=global.Base64,version="2.5.2",buffer;if("undefined"!=typeof module&&module.exports)try{buffer=eval("require('buffer').Buffer")}catch(err){buffer=void 0}var b64chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",b64tab=function(e){for(var o={},r=0,t=e.length;r<t;r++)o[e.charAt(r)]=r;return o}(b64chars),fromCharCode=String.fromCharCode,cb_utob=function(e){if(e.length<2)return(o=e.charCodeAt(0))<128?e:o<2048?fromCharCode(192|o>>>6)+fromCharCode(128|63&o):fromCharCode(224|o>>>12&15)+fromCharCode(128|o>>>6&63)+fromCharCode(128|63&o);var o=65536+1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320);return fromCharCode(240|o>>>18&7)+fromCharCode(128|o>>>12&63)+fromCharCode(128|o>>>6&63)+fromCharCode(128|63&o)},re_utob=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,utob=function(e){return e.replace(re_utob,cb_utob)},cb_encode=function(e){var o=[0,2,1][e.length%3],r=e.charCodeAt(0)<<16|(e.length>1?e.charCodeAt(1):0)<<8|(e.length>2?e.charCodeAt(2):0);return[b64chars.charAt(r>>>18),b64chars.charAt(r>>>12&63),o>=2?"=":b64chars.charAt(r>>>6&63),o>=1?"=":b64chars.charAt(63&r)].join("")},btoa=global.btoa?function(e){return global.btoa(e)}:function(e){return e.replace(/[\s\S]{1,3}/g,cb_encode)},_encode=function(e){return"[object Uint8Array]"===Object.prototype.toString.call(e)?e.toString("base64"):btoa(utob(String(e)))},encode=function(e,o){return o?_encode(String(e)).replace(/[+\/]/g,function(e){return"+"==e?"-":"_"}).replace(/=/g,""):_encode(e)},encodeURI=function(e){return encode(e,!0)},re_btou=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,cb_btou=function(e){switch(e.length){case 4:var o=((7&e.charCodeAt(0))<<18|(63&e.charCodeAt(1))<<12|(63&e.charCodeAt(2))<<6|63&e.charCodeAt(3))-65536;return fromCharCode(55296+(o>>>10))+fromCharCode(56320+(1023&o));case 3:return fromCharCode((15&e.charCodeAt(0))<<12|(63&e.charCodeAt(1))<<6|63&e.charCodeAt(2));default:return fromCharCode((31&e.charCodeAt(0))<<6|63&e.charCodeAt(1))}},btou=function(e){return e.replace(re_btou,cb_btou)},cb_decode=function(e){var o=e.length,r=o%4,t=(o>0?b64tab[e.charAt(0)]<<18:0)|(o>1?b64tab[e.charAt(1)]<<12:0)|(o>2?b64tab[e.charAt(2)]<<6:0)|(o>3?b64tab[e.charAt(3)]:0),n=[fromCharCode(t>>>16),fromCharCode(t>>>8&255),fromCharCode(255&t)];return n.length-=[0,0,2,1][r],n.join("")},_atob=global.atob?function(e){return global.atob(e)}:function(e){return e.replace(/\S{1,4}/g,cb_decode)},atob=function(e){return _atob(String(e).replace(/[^A-Za-z0-9\+\/]/g,""))},_decode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(e){return(e.constructor===buffer.constructor?e:buffer.from(e,"base64")).toString()}:function(e){return(e.constructor===buffer.constructor?e:new buffer(e,"base64")).toString()}:function(e){return btou(_atob(e))},decode=function(e){return _decode(String(e).replace(/[-_]/g,function(e){return"-"==e?"+":"/"}).replace(/[^A-Za-z0-9\+\/]/g,""))},noConflict=function(){var e=global.Base64;return global.Base64=_Base64,e};if(global.Base64={VERSION:version,atob:atob,btoa:btoa,fromBase64:decode,toBase64:encode,utob:utob,encode:encode,encodeURI:encodeURI,btou:btou,decode:decode,noConflict:noConflict,__buffer__:buffer},"function"==typeof Object.defineProperty){var noEnum=function(e){return{value:e,enumerable:!1,writable:!0,configurable:!0}};global.Base64.extendString=function(){Object.defineProperty(String.prototype,"fromBase64",noEnum(function(){return decode(this)})),Object.defineProperty(String.prototype,"toBase64",noEnum(function(e){return encode(this,e)})),Object.defineProperty(String.prototype,"toBase64URI",noEnum(function(){return encode(this,!0)}))}}return global.Meteor&&(Base64=global.Base64),"undefined"!=typeof module&&module.exports?module.exports.Base64=global.Base64:"function"==typeof define&&define.amd&&define([],function(){return global.Base64}),{Base64:global.Base64}});
},{}],"BXfW":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Github=void 0;var t=require("@octokit/rest"),e=require("./utils"),s=require("js-base64");class o{constructor(e){this.owner=e.user.login,this.repo=e.repo,this.auth=e,this.api=new t.Octokit({auth:e.token})}async loadFile(t){const e={owner:this.owner,repo:this.repo};try{const{data:r}=await this.api.repos.getContents({path:t,...e});return[s.Base64.decode(r.content),r.sha]}catch(o){if(404==o.status&&"HttpError"==o.name&&"Not Found"===o.message)return["",void 0];throw o}}async appendToFile(t,o){const r={owner:this.owner,repo:this.repo};let[n,i]=await this.loadFile(t);n&&(n=(0,e.ensureEndsNewline)(n)),n+=(0,e.ensureEndsNewline)(o),await this.api.repos.createOrUpdateFile({path:t,message:"Update",content:s.Base64.encode(n),name:this.auth.user.name,email:this.auth.user.email,sha:i,...r})}serializeNote(t){const e=-1!==t.text.indexOf("\n"),s="#"==t.text[0],o=e||s?"\n":" ";return[t.dtstr+":",t.text].join(o)}filename(t){return`${t}.md`}async loadNotes(t){const e=/^(\d{1,2}:\d\d[ap]m):(.*)/,[s,o]=await this.loadFile(this.filename(t));if(!s)return[];const r=[];let n={dtstr:"",text:""};for(const i of s.split("\n")){const t=e.exec(i);t?(n.text&&r.push(n),n={dtstr:t[1],text:t[2].trim()}):n.text+="\n"+i}return n.text&&r.push(n),r}async syncLocal(t){const s=t.loadAll();if(0===s.length)return;const o=(0,e.groupby)(s,t=>(0,e.iso8601DayCurrTZ)(t.dt));for(const e of Object.keys(o)){const t=o[e].map(this.serializeNote).join("\n\n");await this.appendToFile(this.filename(e),t)}t._clear()}}exports.Github=o;
},{"@octokit/rest":"YI8N","./utils":"FOZT","js-base64":"OvQg"}],"AxoZ":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.githubLogin=o;var e=require("@octokit/rest");const t='\n<div class="Popup-outer">\n<div class="Login Popup">\n  <form class="Login-form">\n    <label>Token <input type="text" name="token" /></label><br />\n    <label>Repo <input type="text" name="repo" /></label><br />\n    <input type="submit" value="Login" />\n  </form>\n  <br />\n  <div class="Login-info"></div>\n  <button disabled>Save Credentials</button>\n</div>\n</div>\n',n="auth";async function o(){let o,r=localStorage.getItem(n);if(r)return JSON.parse(r);const i=new Promise(function(e,t){o=e}),a=document.createElement("div");a.innerHTML=t,document.body.appendChild(a);const s=a.querySelector("form"),l=a.querySelector(".Login-info");return s.addEventListener("submit",function(t){t.preventDefault(),l.textContent="";const r=s.querySelector("[name=token]").value,i=s.querySelector("[name=repo]").value,u=new e.Octokit({auth:r});(async()=>{const{data:e}=await u.request("/user"),t={owner:e.login,repo:i},{data:n}=await u.repos.get(t),o=n.permissions;if(!o.push||!o.pull)throw new Error(`Repo permission error: ${o}`);const{data:r}=await u.repos.listCommits({per_page:1,...t});return[e,n,r[0]]})().then(function([e,t,s]){const u=s.commit.author.email;l.innerHTML=`Login: ${e.login}<br />Name: ${e.name}<br />Repo: ${t.name}<br />Email: ${u}<br />`,function(e){const t=a.querySelector("button");t.disabled=!1,t.addEventListener("click",function(t){t.preventDefault(),localStorage.setItem(n,JSON.stringify(e)),a.parentNode.removeChild(a),o(e)})}({repo:i,token:r,user:{email:u,login:e.login,name:e.name}})}).catch(function(e){console.log(e.stack),l.textContent=e})}),i}
},{"@octokit/rest":"YI8N"}],"e3Cr":[function(require,module,exports) {
function e(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,xhtml:!1}}function l(e){module.exports.defaults=e}module.exports={defaults:e(),getDefaults:e,changeDefaults:l};
},{}],"sUTH":[function(require,module,exports) {
const e=/[&<>"']/,t=/[&<>"']/g,r=/[<>"']|&(?!#?\w+;)/,n=/[<>"']|&(?!#?\w+;)/g,o={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},c=e=>o[e];function s(o,s){if(s){if(e.test(o))return o.replace(t,c)}else if(r.test(o))return o.replace(n,c);return o}const i=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;function l(e){return e.replace(i,(e,t)=>"colon"===(t=t.toLowerCase())?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):"")}const a=/(^|[^\[])\^/g;function u(e,t){e=e.source||e,t=t||"";const r={replace:(t,n)=>(n=(n=n.source||n).replace(a,"$1"),e=e.replace(t,n),r),getRegex:()=>new RegExp(e,t)};return r}const f=/[^\w:]/g,p=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function d(e,t,r){if(e){let e;try{e=decodeURIComponent(l(r)).replace(f,"").toLowerCase()}catch(n){return null}if(0===e.indexOf("javascript:")||0===e.indexOf("vbscript:")||0===e.indexOf("data:"))return null}t&&!p.test(r)&&(r=w(t,r));try{r=encodeURI(r).replace(/%25/g,"%")}catch(n){return null}return r}const g={},h=/^[^:]+:\/*[^\/]*$/,m=/^([^:]+:)[\s\S]*$/,x=/^([^:]+:\/*[^\/]*)[\s\S]*$/;function w(e,t){g[" "+e]||(h.test(e)?g[" "+e]=e+"/":g[" "+e]=O(e,"/",!0));const r=-1===(e=g[" "+e]).indexOf(":");return"//"===t.substring(0,2)?r?t:e.replace(m,"$1")+t:"/"===t.charAt(0)?r?t:e.replace(x,"$1")+t:e+t}const C={exec:function(){}};function b(e){let t,r,n=1;for(;n<arguments.length;n++)for(r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}function A(e,t){const r=e.replace(/\|/g,(e,t,r)=>{let n=!1,o=t;for(;--o>=0&&"\\"===r[o];)n=!n;return n?"|":" |"}).split(/ \|/);let n=0;if(r.length>t)r.splice(t);else for(;r.length<t;)r.push("");for(;n<r.length;n++)r[n]=r[n].trim().replace(/\\\|/g,"|");return r}function O(e,t,r){const n=e.length;if(0===n)return"";let o=0;for(;o<n;){const c=e.charAt(n-o-1);if(c!==t||r){if(c===t||!r)break;o++}else o++}return e.substr(0,n-o)}function $(e,t){if(-1===e.indexOf(t[1]))return-1;const r=e.length;let n=0,o=0;for(;o<r;o++)if("\\"===e[o])o++;else if(e[o]===t[0])n++;else if(e[o]===t[1]&&--n<0)return o;return-1}function z(e){e&&e.sanitize&&!e.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}module.exports={escape:s,unescape:l,edit:u,cleanUrl:d,resolveUrl:w,noopTest:C,merge:b,splitCells:A,rtrim:O,findClosingBracket:$,checkSanitizeDeprecation:z};
},{}],"tlvE":[function(require,module,exports) {
const{noopTest:e,edit:a,merge:l}=require("./helpers.js"),t={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:/^ {0,3}(`{3,}|~{3,})([^`~\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6}) +([^\n]*?)(?: +#+)? *(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,nptable:e,table:e,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};t.def=a(t.def).replace("label",t._label).replace("title",t._title).getRegex(),t.bullet=/(?:[*+-]|\d{1,9}\.)/,t.item=/^( *)(bull) ?[^\n]*(?:\n(?!\1bull ?)[^\n]*)*/,t.item=a(t.item,"gm").replace(/bull/g,t.bullet).getRegex(),t.list=a(t.list).replace(/bull/g,t.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+t.def.source+")").getRegex(),t._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",t._comment=/<!--(?!-?>)[\s\S]*?-->/,t.html=a(t.html,"i").replace("comment",t._comment).replace("tag",t._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),t.paragraph=a(t._paragraph).replace("hr",t.hr).replace("heading"," {0,3}#{1,6} +").replace("|lheading","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}|~{3,})[^`\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",t._tag).getRegex(),t.blockquote=a(t.blockquote).replace("paragraph",t.paragraph).getRegex(),t.normal=l({},t),t.gfm=l({},t.normal,{nptable:/^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,table:/^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/}),t.pedantic=l({},t.normal,{html:a("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",t._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,fences:e,paragraph:a(t.normal._paragraph).replace("hr",t.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",t.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});const n={escape:/^\\([!"#$%&'()*+,\-.\/:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:e,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s_])__(?!_)|^\*\*([^\s*])\*\*(?!\*)|^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)/,em:/^_([^\s_])_(?!_)|^\*([^\s*<\[])\*(?!\*)|^_([^\s<][\s\S]*?[^\s_])_(?!_|[^\spunctuation])|^_([^\s_<][\s\S]*?[^\s])_(?!_|[^\spunctuation])|^\*([^\s<"][\s\S]*?[^\s\*])\*(?!\*|[^\spunctuation])|^\*([^\s*"<\[][\s\S]*?[^\s])\*(?!\*)/,code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:e,text:/^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n))|(?= {2,}\n))/,_punctuation:"!\"#$%&'()*+,\\-./:;<=>?@\\[^_{|}~"};n.em=a(n.em).replace(/punctuation/g,n._punctuation).getRegex(),n._escapes=/\\([!"#$%&'()*+,\-.\/:;<=>?@\[\]\\^_`{|}~])/g,n._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,n._email=/[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,n.autolink=a(n.autolink).replace("scheme",n._scheme).replace("email",n._email).getRegex(),n._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,n.tag=a(n.tag).replace("comment",t._comment).replace("attribute",n._attribute).getRegex(),n._label=/(?:\[[^\[\]]*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,n._href=/<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*/,n._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,n.link=a(n.link).replace("label",n._label).replace("href",n._href).replace("title",n._title).getRegex(),n.reflink=a(n.reflink).replace("label",n._label).getRegex(),n.normal=l({},n),n.pedantic=l({},n.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:a(/^!?\[(label)\]\((.*?)\)/).replace("label",n._label).getRegex(),reflink:a(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",n._label).getRegex()}),n.gfm=l({},n.normal,{escape:a(n.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~+(?=\S)([\s\S]*?\S)~+/,text:/^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?= {2,}\n|[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/}),n.gfm.url=a(n.gfm.url,"i").replace("email",n.gfm._extended_email).getRegex(),n.breaks=l({},n.gfm,{br:a(n.br).replace("{2,}","*").getRegex(),text:a(n.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()}),module.exports={block:t,inline:n};
},{"./helpers.js":"sUTH"}],"GfVS":[function(require,module,exports) {
const{defaults:e}=require("./defaults.js"),{block:t}=require("./rules.js"),{rtrim:s,splitCells:l,escape:i}=require("./helpers.js");module.exports=class n{constructor(s){this.tokens=[],this.tokens.links=Object.create(null),this.options=s||e,this.rules=t.normal,this.options.pedantic?this.rules=t.pedantic:this.options.gfm&&(this.rules=t.gfm)}static get rules(){return t}static lex(e,t){return new n(t).lex(e)}lex(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    "),this.token(e,!0)}token(e,n){let h,r,g,o,a,p,c,u,k,d,f,x,b,y,m,$;for(e=e.replace(/^ +$/gm,"");e;)if((g=this.rules.newline.exec(e))&&(e=e.substring(g[0].length),g[0].length>1&&this.tokens.push({type:"space"})),g=this.rules.code.exec(e)){const t=this.tokens[this.tokens.length-1];e=e.substring(g[0].length),t&&"paragraph"===t.type?t.text+="\n"+g[0].trimRight():(g=g[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",codeBlockStyle:"indented",text:this.options.pedantic?g:s(g,"\n")}))}else if(g=this.rules.fences.exec(e))e=e.substring(g[0].length),this.tokens.push({type:"code",lang:g[2]?g[2].trim():g[2],text:g[3]||""});else if(g=this.rules.heading.exec(e))e=e.substring(g[0].length),this.tokens.push({type:"heading",depth:g[1].length,text:g[2]});else if((g=this.rules.nptable.exec(e))&&(p={type:"table",header:l(g[1].replace(/^ *| *\| *$/g,"")),align:g[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:g[3]?g[3].replace(/\n$/,"").split("\n"):[]}).header.length===p.align.length){for(e=e.substring(g[0].length),f=0;f<p.align.length;f++)/^ *-+: *$/.test(p.align[f])?p.align[f]="right":/^ *:-+: *$/.test(p.align[f])?p.align[f]="center":/^ *:-+ *$/.test(p.align[f])?p.align[f]="left":p.align[f]=null;for(f=0;f<p.cells.length;f++)p.cells[f]=l(p.cells[f],p.header.length);this.tokens.push(p)}else if(g=this.rules.hr.exec(e))e=e.substring(g[0].length),this.tokens.push({type:"hr"});else if(g=this.rules.blockquote.exec(e))e=e.substring(g[0].length),this.tokens.push({type:"blockquote_start"}),g=g[0].replace(/^ *> ?/gm,""),this.token(g,n),this.tokens.push({type:"blockquote_end"});else if(g=this.rules.list.exec(e)){for(e=e.substring(g[0].length),c={type:"list_start",ordered:y=(o=g[2]).length>1,start:y?+o:"",loose:!1},this.tokens.push(c),u=[],h=!1,b=(g=g[0].match(this.rules.item)).length,f=0;f<b;f++)d=(p=g[f]).length,~(p=p.replace(/^ *([*+-]|\d+\.) */,"")).indexOf("\n ")&&(d-=p.length,p=this.options.pedantic?p.replace(/^ {1,4}/gm,""):p.replace(new RegExp("^ {1,"+d+"}","gm"),"")),f!==b-1&&(a=t.bullet.exec(g[f+1])[0],(o.length>1?1===a.length:a.length>1||this.options.smartLists&&a!==o)&&(e=g.slice(f+1).join("\n")+e,f=b-1)),r=h||/\n\n(?!\s*$)/.test(p),f!==b-1&&(h="\n"===p.charAt(p.length-1),r||(r=h)),r&&(c.loose=!0),$=void 0,(m=/^\[[ xX]\] /.test(p))&&($=" "!==p[1],p=p.replace(/^\[[ xX]\] +/,"")),k={type:"list_item_start",task:m,checked:$,loose:r},u.push(k),this.tokens.push(k),this.token(p,!1),this.tokens.push({type:"list_item_end"});if(c.loose)for(b=u.length,f=0;f<b;f++)u[f].loose=!0;this.tokens.push({type:"list_end"})}else if(g=this.rules.html.exec(e))e=e.substring(g[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===g[1]||"script"===g[1]||"style"===g[1]),text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(g[0]):i(g[0]):g[0]});else if(n&&(g=this.rules.def.exec(e)))e=e.substring(g[0].length),g[3]&&(g[3]=g[3].substring(1,g[3].length-1)),x=g[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[x]||(this.tokens.links[x]={href:g[2],title:g[3]});else if((g=this.rules.table.exec(e))&&(p={type:"table",header:l(g[1].replace(/^ *| *\| *$/g,"")),align:g[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:g[3]?g[3].replace(/\n$/,"").split("\n"):[]}).header.length===p.align.length){for(e=e.substring(g[0].length),f=0;f<p.align.length;f++)/^ *-+: *$/.test(p.align[f])?p.align[f]="right":/^ *:-+: *$/.test(p.align[f])?p.align[f]="center":/^ *:-+ *$/.test(p.align[f])?p.align[f]="left":p.align[f]=null;for(f=0;f<p.cells.length;f++)p.cells[f]=l(p.cells[f].replace(/^ *\| *| *\| *$/g,""),p.header.length);this.tokens.push(p)}else if(g=this.rules.lheading.exec(e))e=e.substring(g[0].length),this.tokens.push({type:"heading",depth:"="===g[2].charAt(0)?1:2,text:g[1]});else if(n&&(g=this.rules.paragraph.exec(e)))e=e.substring(g[0].length),this.tokens.push({type:"paragraph",text:"\n"===g[1].charAt(g[1].length-1)?g[1].slice(0,-1):g[1]});else if(g=this.rules.text.exec(e))e=e.substring(g[0].length),this.tokens.push({type:"text",text:g[0]});else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0));return this.tokens}};
},{"./defaults.js":"e3Cr","./rules.js":"tlvE","./helpers.js":"sUTH"}],"GGSY":[function(require,module,exports) {
const{defaults:t}=require("./defaults.js"),{cleanUrl:e,escape:r}=require("./helpers.js");module.exports=class{constructor(e){this.options=e||t}code(t,e,n){const i=(e||"").match(/\S*/)[0];if(this.options.highlight){const e=this.options.highlight(t,i);null!=e&&e!==t&&(n=!0,t=e)}return i?'<pre><code class="'+this.options.langPrefix+r(i,!0)+'">'+(n?t:r(t,!0))+"</code></pre>\n":"<pre><code>"+(n?t:r(t,!0))+"</code></pre>"}blockquote(t){return"<blockquote>\n"+t+"</blockquote>\n"}html(t){return t}heading(t,e,r,n){return this.options.headerIds?"<h"+e+' id="'+this.options.headerPrefix+n.slug(r)+'">'+t+"</h"+e+">\n":"<h"+e+">"+t+"</h"+e+">\n"}hr(){return this.options.xhtml?"<hr/>\n":"<hr>\n"}list(t,e,r){const n=e?"ol":"ul";return"<"+n+(e&&1!==r?' start="'+r+'"':"")+">\n"+t+"</"+n+">\n"}listitem(t){return"<li>"+t+"</li>\n"}checkbox(t){return"<input "+(t?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "}paragraph(t){return"<p>"+t+"</p>\n"}table(t,e){return e&&(e="<tbody>"+e+"</tbody>"),"<table>\n<thead>\n"+t+"</thead>\n"+e+"</table>\n"}tablerow(t){return"<tr>\n"+t+"</tr>\n"}tablecell(t,e){const r=e.header?"th":"td";return(e.align?"<"+r+' align="'+e.align+'">':"<"+r+">")+t+"</"+r+">\n"}strong(t){return"<strong>"+t+"</strong>"}em(t){return"<em>"+t+"</em>"}codespan(t){return"<code>"+t+"</code>"}br(){return this.options.xhtml?"<br/>":"<br>"}del(t){return"<del>"+t+"</del>"}link(t,n,i){if(null===(t=e(this.options.sanitize,this.options.baseUrl,t)))return i;let o='<a href="'+r(t)+'"';return n&&(o+=' title="'+n+'"'),o+=">"+i+"</a>"}image(t,r,n){if(null===(t=e(this.options.sanitize,this.options.baseUrl,t)))return n;let i='<img src="'+t+'" alt="'+n+'"';return r&&(i+=' title="'+r+'"'),i+=this.options.xhtml?"/>":">"}text(t){return t}};
},{"./defaults.js":"e3Cr","./helpers.js":"sUTH"}],"Qrlq":[function(require,module,exports) {
module.exports=class{constructor(){this.seen={}}slug(e){let s=e.toLowerCase().trim().replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,.\/:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-");if(this.seen.hasOwnProperty(s)){const e=s;do{this.seen[e]++,s=e+"-"+this.seen[e]}while(this.seen.hasOwnProperty(s))}return this.seen[s]=0,s}};
},{}],"BbJD":[function(require,module,exports) {
const e=require("./Renderer.js"),{defaults:t}=require("./defaults.js"),{inline:s}=require("./rules.js"),{findClosingBracket:i,escape:r}=require("./helpers.js");module.exports=class n{constructor(i,r){if(this.options=r||t,this.links=i,this.rules=s.normal,this.options.renderer=this.options.renderer||new e,this.renderer=this.options.renderer,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.pedantic?this.rules=s.pedantic:this.options.gfm&&(this.options.breaks?this.rules=s.breaks:this.rules=s.gfm)}static get rules(){return s}static output(e,t,s){return new n(t,s).output(e)}output(e){let t,s,l,h,o,u,a="";for(;e;)if(o=this.rules.escape.exec(e))e=e.substring(o[0].length),a+=r(o[1]);else if(o=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(o[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(o[0])&&(this.inLink=!1),!this.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(o[0])?this.inRawBlock=!0:this.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(o[0])&&(this.inRawBlock=!1),e=e.substring(o[0].length),a+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):r(o[0]):o[0];else if(o=this.rules.link.exec(e)){const s=i(o[2],"()");if(s>-1){const e=(0===o[0].indexOf("!")?5:4)+o[1].length+s;o[2]=o[2].substring(0,s),o[0]=o[0].substring(0,e).trim(),o[3]=""}e=e.substring(o[0].length),this.inLink=!0,l=o[2],this.options.pedantic?(t=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(l))?(l=t[1],h=t[3]):h="":h=o[3]?o[3].slice(1,-1):"",l=l.trim().replace(/^<([\s\S]*)>$/,"$1"),a+=this.outputLink(o,{href:n.escapes(l),title:n.escapes(h)}),this.inLink=!1}else if((o=this.rules.reflink.exec(e))||(o=this.rules.nolink.exec(e))){if(e=e.substring(o[0].length),t=(o[2]||o[1]).replace(/\s+/g," "),!(t=this.links[t.toLowerCase()])||!t.href){a+=o[0].charAt(0),e=o[0].substring(1)+e;continue}this.inLink=!0,a+=this.outputLink(o,t),this.inLink=!1}else if(o=this.rules.strong.exec(e))e=e.substring(o[0].length),a+=this.renderer.strong(this.output(o[4]||o[3]||o[2]||o[1]));else if(o=this.rules.em.exec(e))e=e.substring(o[0].length),a+=this.renderer.em(this.output(o[6]||o[5]||o[4]||o[3]||o[2]||o[1]));else if(o=this.rules.code.exec(e))e=e.substring(o[0].length),a+=this.renderer.codespan(r(o[2].trim(),!0));else if(o=this.rules.br.exec(e))e=e.substring(o[0].length),a+=this.renderer.br();else if(o=this.rules.del.exec(e))e=e.substring(o[0].length),a+=this.renderer.del(this.output(o[1]));else if(o=this.rules.autolink.exec(e))e=e.substring(o[0].length),l="@"===o[2]?"mailto:"+(s=r(this.mangle(o[1]))):s=r(o[1]),a+=this.renderer.link(l,null,s);else if(this.inLink||!(o=this.rules.url.exec(e))){if(o=this.rules.text.exec(e))e=e.substring(o[0].length),this.inRawBlock?a+=this.renderer.text(this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):r(o[0]):o[0]):a+=this.renderer.text(r(this.smartypants(o[0])));else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}else{if("@"===o[2])l="mailto:"+(s=r(o[0]));else{do{u=o[0],o[0]=this.rules._backpedal.exec(o[0])[0]}while(u!==o[0]);s=r(o[0]),l="www."===o[1]?"http://"+s:s}e=e.substring(o[0].length),a+=this.renderer.link(l,null,s)}return a}static escapes(e){return e?e.replace(n.rules._escapes,"$1"):e}outputLink(e,t){const s=t.href,i=t.title?r(t.title):null;return"!"!==e[0].charAt(0)?this.renderer.link(s,i,this.output(e[1])):this.renderer.image(s,i,r(e[1]))}smartypants(e){return this.options.smartypants?e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):e}mangle(e){if(!this.options.mangle)return e;const t=e.length;let s,i="",r=0;for(;r<t;r++)s=e.charCodeAt(r),Math.random()>.5&&(s="x"+s.toString(16)),i+="&#"+s+";";return i}};
},{"./Renderer.js":"GGSY","./defaults.js":"e3Cr","./rules.js":"tlvE","./helpers.js":"sUTH"}],"Xnzt":[function(require,module,exports) {
module.exports=class{strong(r){return r}em(r){return r}codespan(r){return r}del(r){return r}text(r){return r}link(r,e,t){return""+t}image(r,e,t){return""+t}br(){return""}};
},{}],"Xd8K":[function(require,module,exports) {
const e=require("./Renderer.js"),t=require("./Slugger.js"),r=require("./InlineLexer.js"),s=require("./TextRenderer.js"),{defaults:n}=require("./defaults.js"),{merge:i,unescape:h}=require("./helpers.js");module.exports=class o{constructor(r){this.tokens=[],this.token=null,this.options=r||n,this.options.renderer=this.options.renderer||new e,this.renderer=this.options.renderer,this.renderer.options=this.options,this.slugger=new t}static parse(e,t){return new o(t).parse(e)}parse(e){this.inline=new r(e.links,this.options),this.inlineText=new r(e.links,i({},this.options,{renderer:new s})),this.tokens=e.reverse();let t="";for(;this.next();)t+=this.tok();return t}next(){return this.token=this.tokens.pop(),this.token}peek(){return this.tokens[this.tokens.length-1]||0}parseText(){let e=this.token.text;for(;"text"===this.peek().type;)e+="\n"+this.next().text;return this.inline.output(e)}tok(){let e="";switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,h(this.inlineText.output(this.token.text)),this.slugger);case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":{let t,r,s,n,i="";for(s="",t=0;t<this.token.header.length;t++)s+=this.renderer.tablecell(this.inline.output(this.token.header[t]),{header:!0,align:this.token.align[t]});for(i+=this.renderer.tablerow(s),t=0;t<this.token.cells.length;t++){for(r=this.token.cells[t],s="",n=0;n<r.length;n++)s+=this.renderer.tablecell(this.inline.output(r[n]),{header:!1,align:this.token.align[n]});e+=this.renderer.tablerow(s)}return this.renderer.table(i,e)}case"blockquote_start":for(e="";"blockquote_end"!==this.next().type;)e+=this.tok();return this.renderer.blockquote(e);case"list_start":{e="";const t=this.token.ordered,r=this.token.start;for(;"list_end"!==this.next().type;)e+=this.tok();return this.renderer.list(e,t,r)}case"list_item_start":{e="";const t=this.token.loose,r=this.token.checked,s=this.token.task;if(this.token.task)if(t)if("text"===this.peek().type){const e=this.peek();e.text=this.renderer.checkbox(r)+" "+e.text}else this.tokens.push({type:"text",text:this.renderer.checkbox(r)});else e+=this.renderer.checkbox(r);for(;"list_item_end"!==this.next().type;)e+=t||"text"!==this.token.type?this.tok():this.parseText();return this.renderer.listitem(e,s,r)}case"html":return this.renderer.html(this.token.text);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText());default:{const e='Token with "'+this.token.type+'" type was not found.';if(!this.options.silent)throw new Error(e);console.log(e)}}}};
},{"./Renderer.js":"GGSY","./Slugger.js":"Qrlq","./InlineLexer.js":"BbJD","./TextRenderer.js":"Xnzt","./defaults.js":"e3Cr","./helpers.js":"sUTH"}],"afg3":[function(require,module,exports) {
const e=require("./Lexer.js"),r=require("./Parser.js"),t=require("./Renderer.js"),n=require("./TextRenderer.js"),i=require("./InlineLexer.js"),s=require("./Slugger.js"),{merge:u,checkSanitizeDeprecation:l,escape:a}=require("./helpers.js"),{getDefaults:o,changeDefaults:p,defaults:f}=require("./defaults.js");function c(t,n,i){if(null==t)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof t)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(t)+", string expected");if(i||"function"==typeof n){i||(i=n,n=null),n=u({},c.defaults,n||{}),l(n);const a=n.highlight;let o,p,f=0;try{o=e.lex(t,n)}catch(s){return i(s)}p=o.length;const h=function(e){if(e)return n.highlight=a,i(e);let t;try{t=r.parse(o,n)}catch(s){e=s}return n.highlight=a,e?i(e):i(null,t)};if(!a||a.length<3)return h();if(delete n.highlight,!p)return h();for(;f<o.length;f++)!function(e){"code"!==e.type?--p||h():a(e.text,e.lang,function(r,t){return r?h(r):null==t||t===e.text?--p||h():(e.text=t,e.escaped=!0,void(--p||h()))})}(o[f])}else try{return n=u({},c.defaults,n||{}),l(n),r.parse(e.lex(t,n),n)}catch(s){if(s.message+="\nPlease report this to https://github.com/markedjs/marked.",(n||c.defaults).silent)return"<p>An error occurred:</p><pre>"+a(s.message+"",!0)+"</pre>";throw s}}c.options=c.setOptions=function(e){return u(c.defaults,e),p(c.defaults),c},c.getDefaults=o,c.defaults=f,c.Parser=r,c.parser=r.parse,c.Renderer=t,c.TextRenderer=n,c.Lexer=e,c.lexer=e.lex,c.InlineLexer=i,c.inlineLexer=i.output,c.Slugger=s,c.parse=c,module.exports=c;
},{"./Lexer.js":"GfVS","./Parser.js":"Xd8K","./Renderer.js":"GGSY","./TextRenderer.js":"Xnzt","./InlineLexer.js":"BbJD","./Slugger.js":"Qrlq","./helpers.js":"sUTH","./defaults.js":"e3Cr"}],"epB2":[function(require,module,exports) {
"use strict";var t=require("./gh"),e=require("./auth"),o=require("./utils"),s=r(require("marked"));function r(t){return t&&t.__esModule?t:{default:t}}"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("https://carlos.correa.me/take-note/sw.js").then(t=>{console.log("service worker registered in scope: ",t.scope)}).catch(t=>console.log("SW error: ",t))});const n="draft";class i{constructor(t){this.el=t}load(){const t=localStorage.getItem(n);""!==t&&(this.el.value=t)}save(){const t=this.el.value;localStorage.setItem(n,t)}addEventListeners(){document.addEventListener("blur",t=>{this.save()},!0),document.addEventListener("visibilitychange",t=>{document.hidden?this.save():this.el.focus()},!1)}}const a="notes";class l{loadAll(){const t=localStorage.getItem(a),e=null===t?[]:JSON.parse(t);for(const o of e)o.dtstr=this.dtfmt(o.dt);return e}_clear(){localStorage.removeItem(a)}dtfmt(t){let e=(t=new Date(t)).getHours(),o=e>=12?"pm":"am";return e>12?e-=12:0===e&&(e=12),`${e}:${s=t.getMinutes(),s<10?"0"+s:""+s}${o}`;var s}save(t){const e=this.loadAll(),o=new Date;e.push({dt:+o,text:t.trim()}),localStorage.setItem(a,JSON.stringify(e))}serializeNote(t){return`${this.dtfmt(t.dt)}\n${t.text}`}}class c{constructor(){this.local=new l,this.notesEl=document.querySelector(".Notes"),this.notesEl.querySelector(".Notes-error").addEventListener("click",t=>{this.sync()});const t=document.querySelector("form.Composer");this.textarea=t.querySelector("[name=text]"),this.draft=new i(this.textarea),t.addEventListener("keydown",t=>{t.metaKey&&13===t.keyCode&&(t.preventDefault(),this.formSubmit())}),t.addEventListener("submit",t=>{t.preventDefault(),this.formSubmit()}),this.loading=!0,this.remote=this.loadRemoteLocal()}renderNotes(){const t=this.local.loadAll();this.remote&&(this.notesEl.querySelector(".Notes-remote").innerHTML=h(this.remote)),this.notesEl.querySelector(".Notes-local").innerHTML=h(t),this.notesEl.querySelector(".Notes-loading").textContent=this.loading?"Loading...":"",this.notesEl.querySelector(".Notes-error").textContent=this.error?`Error: ${this.error}, Click to retry`:"",window.scrollTo(0,document.documentElement.scrollHeight)}formSubmit(){const t=this.textarea.value;""!==t&&(this.textarea.value="",this.local.save(t),this.sync()),this.textarea.focus()}loadRemoteLocal(){const t=(0,o.iso8601DayCurrTZ)(new Date),e=localStorage.getItem("remote");if(!e)return;const s=JSON.parse(e);return s.day===t?s.notes:void 0}async loadRemote(){const t=(0,o.iso8601DayCurrTZ)(new Date),e=await this.api.loadNotes(t);return localStorage.setItem("remote",JSON.stringify({day:t,notes:e})),e}async sync(){if(this.loading=!0,this.error="",this.renderNotes(),this.api){try{await this.api.syncLocal(this.local),this.remote=await this.loadRemote()}catch(t){return console.log(t.stack),this.loading=!1,this.error=t,void this.renderNotes()}this.loading=!1,this.renderNotes()}}}const d=t=>`\n<div class="Note">\n  <div class="Note-inner">\n    <div class="Note-dt">${t.dtstr}</div>\n    <span class="Note-text">${t.text}</span>\n  </div>\n</div>\n`;function h(t){return t.map(t=>(t.text=(0,s.default)(t.text),d(t))).join("")}function u(){const o=new c;o.draft.addEventListeners(),o.draft.load(),o.sync(),o.textarea.focus(),(0,e.githubLogin)().then(function(e){o.api=new t.Github(e),o.sync()})}u();
},{"./sw.js":[["sw.js","NqYy"],"sw.js.map","NqYy"],"./gh":"BXfW","./auth":"AxoZ","./utils":"FOZT","marked":"afg3"}]},{},["epB2"], null)
//# sourceMappingURL=https://carlos.correa.me/take-note/main.6f31f198.js.map